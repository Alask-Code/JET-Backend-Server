var ScheduledEventHandler=function(a){var b=this;this.eventCallbacks={};this.loadSchedule();setInterval(function(){b.processSchedule()},1E3*a)};ScheduledEventHandler.prototype.addEvent=function(a,b){this.eventCallbacks[a]=b};ScheduledEventHandler.prototype.saveToDisk=function(){fileIO.write(db.user.events.schedule,this.scheduledEvents)};
ScheduledEventHandler.prototype.loadSchedule=function(){fileIO.exist(db.user.events.schedule)?this.scheduledEvents=fileIO.readParsed(db.user.events.schedule):this.scheduledEvents=[]};ScheduledEventHandler.prototype.processSchedule=function(){for(var a=Date.now();0<this.scheduledEvents.length;){var b=this.scheduledEvents.shift();if(b.scheduledTime<a)this.processEvent(b);else{this.scheduledEvents.unshift(b);break}}};
ScheduledEventHandler.prototype.addToSchedule=function(a){this.scheduledEvents.push(a);this.scheduledEvents.sort(compareEvent)};ScheduledEventHandler.prototype.removeFromSchedule=function(a){a=this.scheduledEvents.indexOf(a);return-1<a?this.scheduledEvents.splice(a,1):!1};ScheduledEventHandler.prototype.getScheduleForSession=function(a){return this.scheduledEvents.filter(function(b){return b.sessionId===a})};
ScheduledEventHandler.prototype.wipeScheduleForSession=function(a){var b=this;this.getScheduleForSession(a).forEach(function(a){return b.removeFromSchedule(a)});this.saveToDisk()};ScheduledEventHandler.prototype.processEvent=function(a){if(a.type in this.eventCallbacks)this.eventCallbacks[a.type](a)};function compareEvent(a,b){return a.scheduledTime<b.scheduledTime?-1:a.scheduledTime>b.scheduledTime?1:0}module.exports.scheduledEventHandler=new ScheduledEventHandler(serverConfig.eventPollIntervalSec);